# this script uses the Random Forest method to calculate feature importance

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import StandardScaler

df_features = pd.read_excel('sickness_table_with_features_sinusoidal.xlsx')

# split the data into training and test sets
X = df_features[['sinusoidal_num_healthy', 'sinusoidal_num_calls', 'month_sin', 'month_cosine', 'year_index']]
y = df_features['sby_need_rolling_mean']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# scale the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# train a Random Forest Regressor model
model = RandomForestRegressor(random_state=42)
model.fit(X_train, y_train)

# calculate the feature importances
importances = model.feature_importances_
features = X.columns

# print the feature importances
for feature, importance in zip(features, importances):
    print(f'{feature}: {importance:.4f}')
